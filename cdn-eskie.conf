proxy_cache_path /opt/cache/cdn_data levels=1:2 keys_zone=cdn_cache:32m max_size=5g inactive=1M use_temp_path=off;
proxy_cache_key "$scheme$request_method$host$request_uri";

server {
  set $upstream IPADDR;
  
  listen 443 ssl;
  server_name DOMAINNAME;

  ssl on;
	ssl_certificate /cdn/ssl/cdn-eskie.crt;
	ssl_certificate_key /cdn/ssl/cdn-eskie.key;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

	ssl_dhparam /cdn/ssl/cdn-eskie.pem;

  access_log /var/log/nginx/cdn-docker_access.log;
  error_log /var/log/nginx/cdn-docker_access.log;

  location / {
    expires max;
    proxy_pass https://$upstream;
    proxy_http_version 1.1;

    proxy_cache cdn_cache;
    proxy_cache_bypass $http_cache_control;
    proxy_cache_bypass $http_pragma;
    proxy_cache_revalidate on;
    proxy_cache_min_uses 1;
    proxy_cache_lock on;
    proxy_ignore_headers Cache-Control;
    proxy_cache_methods GET HEAD POST;

    proxy_cache_valid 200 206 207 302 304 1M;
    proxy_cache_valid 404 1m;
    proxy_cache_valid any 5m;

    proxy_ignore_headers "Set-Cookie";
    proxy_hide_header "Set-Cookie";

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto https;
    
    add_header X-Proxy-Cache $upstream_cache_status;
    add_header X-Author "4376c60c2f87902b2d29971b816b7a38";
    add_header X-Config "root";
  }
}

server {
  server_name DOMAINNAME;
  
  if ($host = DOMAINNAME) {
      return 301 https://$host$request_uri;
  }
  
  listen 80;
    return 404;
}